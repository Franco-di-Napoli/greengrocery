# SaleController
SaleController.findAll = Returns a list of all Sales in the system.
SaleController.findAll.notes = Returns a list of all Sales in the system.

SaleController.findById = Returns a specific Sale by its ID.
SaleController.findById.notes = Returns a specific Sale by its ID or Not found HTTP status if the sale was not found.
SaleController.findById.param = ID of the sale to return.

SaleController.deleteById = Deletes a Sale by its ID.
SaleController.deleteById.notes = Deletes a Sale by its ID or returns Not found HTTP status if the sale was not found.
SaleController.deleteById.param = ID of the sale to be deleted

SaleController.updateById = Updates a Sale by its ID.
SaleController.updateById.notes = Updates a Sale by its ID or returns Not found HTTP status if the Sale was not found.
SaleController.updateById.param = Sale object to be updated.

SaleController.create = Creates a Sale.
SaleController.create.notes = Creates a Sale according to the Sale object passed.
SaleController.create.param = Sale object to be created.

SaleController.addProductsOnSale = Adds ProductOnSale objects to a sale.
SaleController.addProductsOnSale.notes = Adds ProductOnSale objects to a sale and updates its totalAmount.
SaleController.addProductsOnSale.param = ProductOnSale set to add. May be to different sales.
SaleController.editProductOnSale = Edits a ProductOnSale.
SaleController.editProductOnSale.notes = Edits a ProductOnSale or returns Not found HTTP status if the ProductOnSale was not found.
SaleController.editProductOnSale.param = ProductOnSale object to edit.
SaleController.deleteProductOnSale = Deletes a ProductOnSale.
SaleController.deleteProductOnSale.notes = Deletes a ProductOnSale by its saleId and productId or returns Not found HTTP status if the ProductOnSale was not found.
SaleController.deleteProductOnSale.param.saleId = Sale ID of the sale whose product will be deleted.
SaleController.deleteProductOnSale.param.productId = Product ID of the product to delete from the sale.

# FranchiseController
FranchiseController.findAll = Returns a list of all Franchises in the system.
FranchiseController.findAll.notes = Returns a list of all Franchises in the system.

FranchiseController.findById = Returns a specific Franchise by its ID.
FranchiseController.findById.notes = Returns a specific Franchise by its ID or Not found HTTP status if the Franchise was not found.
FranchiseController.findById.param = ID of the Franchise to return.

FranchiseController.deleteById = Deletes a Franchise by its ID.
FranchiseController.deleteById.notes = Deletes a Franchise by its ID or returns Not found HTTP status if the Franchise was not found.
FranchiseController.deleteById.param = ID of the Franchise to be deleted

FranchiseController.updateById = Updates a Franchise by its ID.
FranchiseController.updateById.notes = Updates a Franchise by its ID or returns Not found HTTP status if the Franchise was not found. Property employeeIds is not allowed.
FranchiseController.updateById.param = Franchise object to be updated.

FranchiseController.create = Creates a Franchise.
FranchiseController.create.notes = Creates a Franchise according to the Franchise object passed. Property id is ignored. Property employeeIds is not allowed.
FranchiseController.create.param = Franchise object to be created.

FranchiseController.deleteFranchiseProductById = Deletes a Franchise Product by its ID.
FranchiseController.deleteFranchiseProductById.notes = Deletes a Franchise Product by its ID or returns Not found HTTP status if the Product was not found.
FranchiseController.deleteFranchiseProductById.param.productId = ID of the Product to be deleted.
FranchiseController.deleteFranchiseProductById.param.franchiseId = ID of the Franchise where the Product to be deleted is.

FranchiseController.updateFranchiseProduct = Updates a Franchise Product by its ID.
FranchiseController.updateFranchiseProduct.notes = Updates a Franchise Product by its ID or returns Not found HTTP status if the Product was not found.
FranchiseController.updateFranchiseProduct.param = Franchise Product object to be updated.

FranchiseController.addFranchiseProducts = Creates Franchise Products.
FranchiseController.addFranchiseProducts.notes = Creates Franchise Product according to the list passed.
FranchiseController.addFranchiseProducts.param = Franchise Products to be created.

# EmployeeController
EmployeeController.findAll = Returns a list of all Employees in the system.
EmployeeController.findAll.notes = Returns a list of all Employees in the system.

EmployeeController.findById = Returns a specific Employee by its ID.
EmployeeController.findById.notes = Returns a specific Employee by its ID or Not found HTTP status if the Employee was not found.
EmployeeController.findById.param = ID of the Employee to return.

EmployeeController.deleteById = Deletes a Employee by its ID.
EmployeeController.deleteById.notes = Deletes a Employee by its ID or returns Not found HTTP status if the Employee was not found.
EmployeeController.deleteById.param = ID of the Employee to be deleted

EmployeeController.updateById = Updates a Employee by its ID.
EmployeeController.updateById.notes = Updates a Employee by its ID or returns Not found HTTP status if the Employee was not found.
EmployeeController.updateById.param = Employee object to be updated.

EmployeeController.create = Creates a Employee.
EmployeeController.create.notes = Creates a Employee according to the Employee object passed. Property id is ignored.
EmployeeController.create.param = Employee object to be created.

# CustomerController
CustomerController.findAll = Returns a list of all Customers in the system.
CustomerController.findAll.notes = Returns a list of all Customers in the system.

CustomerController.findById = Returns a specific Customer by its ID.
CustomerController.findById.notes = Returns a specific Customer by its ID or Not found HTTP status if the Customer was not found.
CustomerController.findById.param = ID of the Customer to return.

CustomerController.deleteById = Deletes a Customer by its ID.
CustomerController.deleteById.notes = Deletes a Customer by its ID or returns Not found HTTP status if the Customer was not found.
CustomerController.deleteById.param = ID of the Customer to be deleted

CustomerController.updateById = Updates a Customer by its ID.
CustomerController.updateById.notes = Updates a Customer by its ID or returns Not found HTTP status if the Customer was not found.
CustomerController.updateById.param = Customer object to be updated.

CustomerController.create = Creates a Customer.
CustomerController.create.notes = Creates a Customer according to the Customer object passed. Property id is ignored.
CustomerController.create.param = Customer object to be created.

# ProductController
ProductController.findAll = Returns a list of all Products in the system.
ProductController.findAll.notes = Returns a list of all Products in the system.

ProductController.findById = Returns a specific Product by its ID.
ProductController.findById.notes = Returns a specific Product by its ID or Not found HTTP status if the Product was not found.
ProductController.findById.param = ID of the Product to return.

ProductController.deleteById = Deletes a Product by its ID.
ProductController.deleteById.notes = Deletes a Product by its ID or returns Not found HTTP status if the Product was not found.
ProductController.deleteById.param = ID of the Product to be deleted

ProductController.updateById = Updates a Product by its ID.
ProductController.updateById.notes = Updates a Product by its ID or returns Not found HTTP status if the Product was not found.
ProductController.updateById.param = Product object to be updated.

ProductController.create = Creates a Product.
ProductController.create.notes = Creates a Product according to the Product object passed. Property id is ignored.
ProductController.create.param = Product object to be created.

# ZoneController
ZoneController.findAll = Returns a list of all Zones in the system.
ZoneController.findAll.notes = Returns a list of all Zones in the system.

ZoneController.findById = Returns a specific Zone by its ID.
ZoneController.findById.notes = Returns a specific Zone by its ID or Not found HTTP status if the Zone was not found.
ZoneController.findById.param = ID of the Zone to return.

ZoneController.deleteById = Deletes a Zone by its ID.
ZoneController.deleteById.notes = Deletes a Zone by its ID or returns Not found HTTP status if the Zone was not found.
ZoneController.deleteById.param = ID of the Zone to be deleted

ZoneController.updateById = Updates a Zone by its ID.
ZoneController.updateById.notes = Updates a Zone by its ID or returns Not found HTTP status if the Zone was not found.
ZoneController.updateById.param = Zone object to be updated.

ZoneController.create = Creates a Zone.
ZoneController.create.notes = Creates a Zone according to the Zone object passed. Property id is ignored.
ZoneController.create.param = Zone object to be created.

# DTOS
SaleDto.id = ID of the sale.
SaleDto.totalAmount = Total amount of the sale.
SaleDto.employeeId = ID of the employee who made the sale.
SaleDto.customerId = ID of the customer who was involved in the sale.
SaleDto.productsOnSale = ProductOnSale set associated with the sale.

PersonDto.id = ID of the person
PersonDto.firstName = First name of the Person.
PersonDto.lastName = Last name of the Person..
PersonDto.dni = Identification number of the Person.

CustomerDto.shipmentAddress = address of the Customer. 
CustomerDto.finalCustomer = Whether the customer is final or not.
CustomerDto.cuit = cuit of the Customer.

EmployeeDto.dateOfHire = Date when this employee was hired.
EmployeeDto.position = Current position of the Employee.
EmployeeDto.salary = Current salary of the Employee.
EmployeeDto.franchiseId = ID of the franchise where this employee works.

ProductDto.id = ID of the product.
ProductDto.name = Name of the product.
ProductDto.description = Description of the product.
ProductDto.price = Price of the product.

FranchiseDto.id = ID of the franchise.
FranchiseDto.orderDate = Order date of the franchise.
FranchiseDto.employeeIds = List containing the franchise employees IDs.
FranchiseDto.franchiseProducts = List containing the franchise products.

FranchiseProductDto.franchiseId = ID of franchise where this product is.
FranchiseProductDto.productId = ID of the product.
FranchiseProductDto.amount = Amount of this product in this franchise.

ZoneDto.id = ID of the zone.
ZoneDto.name = Name of the zone.
ZoneDto.description = Description of the zone.